<!DOCTYPE html>
<html class="no-js">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta charset="utf-8">
  <title>Que se passe-t-il chaque seconde sur GITHUB</title>

  <%= stylesheet_link_tag "rubyconcat", media: "all" %>
</head>
<body>

<div class="splash" style="display: none;">
  <h1>See how quickly tech giants build wealth</h1>

  <h2>Compare how much revenue and profit they make each second</h2>
</div>

<div class="container">
  <div class="wrapper">
    <div class="p_header clearfix">
      <div class="p_header_left">
        <h1>What happens on GITHUB each second ?</h1>
      </div>
      <div class="p_header_center">
        <div class="counter counter-minutes">
          <span class="counter_number" id="counter_min_2">0</span>
          <span class="counter_number" id="counter_min_1">0</span>
        </div>
        <div class="counter counter-seconds">
          <span class="counter_number" id="counter_sec_2">0</span>
          <span class="counter_number" id="counter_sec_1">0</span>
        </div>
      </div>

    </div>
  </div>

  <div class="main wrapper">
    <ul class="companies clearfix" style="display: block;">
      <li class="company goog">
        <div class="circleContainer">
          <h6 class="logo ir ">Activities</h6>

          <div id="circleActivities" class="circle profitCircle" data-type="profit" style="width: 0; height: 0; left:0; top:0;">
          </div>
          <div class="circle revenueCircle small" data-type="revenue" style="width: 247.442px; height: 247.442px; left:-123.721px; top:-123.721px;">
          </div>
          <div class="numberContainer">
            <span class="number profit ">Activities: <strong id="counterActivities" data-circle="circleActivities">0</strong></span>
            <br>
            <span class="number revenue "></span>
            <br>
          </div>
        </div>
      </li>

      <li class="company face">
        <div class="circleContainer">
          <h6 class="logo ir ">Repositories</h6>

          <div id="circleRepositories" class="circle profitCircle" data-type="profit" style="width: 0; height: 0; left:0; top:0;">
          </div>
          <div class="circle revenueCircle small" data-type="revenue" style="width: 89.765px; height: 89.765px; left:-44.8825px; top:-44.8825px;">
          </div>
          <div class="numberContainer">
            <span class="number profit ">Repositories: <strong id="counterRepositories" data-circle="circleRepositories">0</strong></span>
            <br>
            <span class="number revenue "></span>
            <br>
          </div>
        </div>
      </li>

      <li class="company twit">
        <div class="circleContainer">
          <h6 class="logo ir ">Forks</h6>

          <div id="circleForks" class="circle profitCircle" style="width: 0; height: 0; left:0; top:0;">
          </div>
          <div id="circleForksBg" class="circle revenueCircle small" style="width: 40px; height: 40px; left:-20px; top:-20px;">
          </div>
          <div class="numberContainer">
            <span class="number profit ">Forks: <strong id="counterForks" data-circle="circleForks">0</strong></span>
            <br>
            <span class="number revenue "></span>
            <br>
          </div>
        </div>
      </li>

      <li class="company appl">
        <div class="circleContainer">
          <h6 class="logo ir ">Issues</h6>

          <div class="circle profitCircle"
               style="width: 0; height: 0; left:0; top:0;"
               id="circleIssues"
          >
          </div>
          <div class="circle revenueCircle "
               style="width: 247.442px; height: 247.442px; left:-123.721px; top:-123.721px;"
               id="circleIssuesBg">
          </div>
          <div class="numberContainer">
            <span class="number profit ">Issues: <strong id="counterIssues" data-circle="circleIssues">0</strong></span>
            <br>
            <span class="number revenue "></span>
            <br>
          </div>
        </div>
      </li>
    </ul>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.min.js"></script>
  <script>

      var eventsApiBaseUrl = "http://github-realtime-dashboard.herokuapp.com/events";


      /// Activit√©s
      var counterActivities;
      var nbWatchedEvents;
      getNbOfEvents("CreateEvent", function(val){
          nbWatchedEvents = val / 3600;
          counterActivities = 0;
          setInterval(updateCreateEvent, 1000);
      });


      /// Repositories
      var nbCreatedRepositories;
      var counterRepositories;
      getNbOfEvents("WatchEvent", function(val){
          nbCreatedRepositories = val / 3600;
          counterRepositories = 0;
          setInterval(updateCreatedRepositories, 1000);
      });


      /// Forks
      var nbCreatedForks;
      var counterForks;
      getNbOfEvents("ForkEvent", function(val){
          nbCreatedForks = val / 3600;
          counterForks = 0;
          setInterval(updateCreatedForks, 1000);
      });


      /// Issues
      var nbCreatedIssues;
      var counterIssues;
      getNbOfEvents("IssuesEvent", function(val){
          nbCreatedIssues = val / 3600;
          counterIssues = 0;
          setInterval(updateCreatedIssues, 1000);
      });

      var timerIncTemps = setInterval(afficherTemps, 1000);

      var tempsSec = 0;
      var tempsMin = 0;

      function getNbOfEvents(type, callback) {

          try{

              if (!type) {
                  $.get(eventsApiBaseUrl, function (data, status) {
                      console.log("Querying " + eventsApiBaseUrl + "-count");
                      console.log("Status " + status);
                      //console.log("Result : " + data);

                      if (status == 'success') {

                          callback(data);
                      }


                  });
              }

              var countEventsNamespace = "-count-by-type/";


              $.get(eventsApiBaseUrl + countEventsNamespace + type, function (data, status) {
                  console.log("Querying " + eventsApiBaseUrl + countEventsNamespace + type);
                  console.log("Status " + status);
                  console.log("Result : " + data);

                  if (status == 'success') {
                      callback(data);
                  }

              });
          }catch(err){
              return 0;
          }
      }

      function afficherTemps() {
          tempsSec += 1;

          if (tempsSec == 60) {
              tempsSec = 0;
              tempsMin += 1;
          }

          var stringSec = (tempsSec <= 9 ? "0" : "") + tempsSec;
          var stringMin = (tempsMin <= 9 ? "0" : "") + tempsMin;

          $('#counter_sec_1').html(stringSec[1]);
          $('#counter_sec_2').html(stringSec[0]);

          $('#counter_min_1').html(stringMin[1]);
          $('#counter_min_2').html(stringMin[0]);
      }

      function updateCreateEvent(){
          counterActivities += nbWatchedEvents;
          smoothValue($('#counterActivities'), counterActivities, 300);
      }

      function updateCreatedRepositories(){
          counterRepositories += nbCreatedRepositories;
          smoothValue($('#counterRepositories'), counterRepositories, 150);
      }

      function updateCreatedForks(){
          counterForks += nbCreatedForks;
          smoothValue($('#counterForks'), counterForks, 100);
      }

      function updateCreatedIssues(){
          counterIssues += nbCreatedIssues;
          smoothValue($('#counterIssues'), counterIssues, 300);
      }


      function smoothValue(id, newVal, maxSize) {

          maxSize = maxSize == null ? 500 : maxSize;

          var startVal = id.html();
          var endVal = newVal;

          $({Counter: startVal}).animate({Counter: endVal}, {
              duration: 1000,
              easing: "swing",
              step: function () {

                  var x = Math.ceil(this.Counter);
                  var speed = 0.2;

                  var circleId = $('#' + id.attr('data-circle'));

                  circleId.css("height", (x % maxSize) * 2 * speed);
                  circleId.css("width", (x % maxSize) * 2 * speed);
                  circleId.css("left", -(x % maxSize) * speed);
                  circleId.css("top", -(x % maxSize) * speed);

                  id.text(x);
              }
          });
      }

  </script>


  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.min.js"></script>
</body>
</html>
